<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomControls"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style TargetType="{x:Type local:ImageButton}"
           BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="MinWidth"
                Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="5"
                                Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=local:ImageButton}}">
                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                   HorizontalAlignment="Center"
                                   FontSize="18"
                                   Text="{Binding Icon, RelativeSource={RelativeSource AncestorType=local:ImageButton}}" />
                        <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=local:ImageButton}}"
                                   HorizontalAlignment="Center"
                                   Margin="0,5,0,0" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ToggleImageButton}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="MinWidth"
                Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="5"
                                Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=local:ToggleImageButton}}">
                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                   HorizontalAlignment="Center"
                                   FontSize="{Binding IconSize, RelativeSource={RelativeSource AncestorType=local:ToggleImageButton}}"
                                   Text="{Binding Icon, RelativeSource={RelativeSource AncestorType=local:ToggleImageButton}}" />
                        <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=local:ToggleImageButton}}"
                                   HorizontalAlignment="Center"
                                   Margin="0,5,0,0" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ToggleImageDescriptionButton}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="MinWidth"
                Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                   FontSize="{Binding IconSize, RelativeSource={RelativeSource AncestorType=local:ToggleImageDescriptionButton}}"
                                   Text="{Binding Icon, RelativeSource={RelativeSource AncestorType=local:ToggleImageDescriptionButton}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="5"
                                   Grid.Column="0"></TextBlock>
                        <StackPanel Grid.Column="1"
                                    Margin="0,5,5,5">
                            <TextBlock Text="{Binding Text, RelativeSource={RelativeSource AncestorType=local:ToggleImageDescriptionButton}}"
                                       HorizontalAlignment="Left"
                                       FontSize="14" />
                            <TextBlock Text="{Binding Description, RelativeSource={RelativeSource AncestorType=local:ToggleImageDescriptionButton}}"
                                       HorizontalAlignment="Left"
                                       Margin="0,5,0,0" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:VerticalImageButton}"
           BasedOn="{StaticResource {x:Type Button}}">
        <Style.Resources>
            <Style x:Key="buttonText"
                   TargetType="{x:Type TextBlock}">
                <Setter Property="Text"
                        Value="{Binding ContentOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                 Value="True">
                        <Setter Property="Text"
                                Value="{Binding ContentOn, RelativeSource={RelativeSource AncestorType=Button}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                 Value="False">
                        <Setter Property="Text"
                                Value="{Binding ContentOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="buttonIcon"
                   TargetType="{x:Type ContentControl}">
                <Setter Property="Template"
                        Value="{Binding IconOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                 Value="True">
                        <Setter Property="Template"
                                Value="{Binding IconOn, RelativeSource={RelativeSource AncestorType=Button}}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                 Value="False">
                        <Setter Property="Template"
                                Value="{Binding IconOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical"
                                Margin="2">
                        <Viewbox Width="36">
                            <ContentControl Style="{DynamicResource buttonIcon}"
                                            Focusable="False" />
                            <Viewbox.RenderTransform>
                                <ScaleTransform ScaleX="1.3"
                                                ScaleY="1.3" />
                            </Viewbox.RenderTransform>
                            <Viewbox.RenderTransformOrigin>
                                <Point X="0.5"
                                       Y="0.5" />
                            </Viewbox.RenderTransformOrigin>
                        </Viewbox>
                        <TextBlock Style="{DynamicResource buttonText}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width"
                Value="61" />
        <Setter Property="Margin"
                Value="2" />
    </Style>

    <Style TargetType="{x:Type local:StateImageButton}"
           BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="MinWidth"
                Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="5"
                                Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=Button}}">
                        <TextBlock Name="Icon"
                                   FontFamily="Segoe MDL2 Assets"
                                   HorizontalAlignment="Center"
                                   FontSize="18"
                                   Text="{Binding IconOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                        <TextBlock Name="Text"
                                   Text="{Binding TextOff, RelativeSource={RelativeSource AncestorType=Button}}"
                                   HorizontalAlignment="Center"
                                   Margin="0,5,0,0" />
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                     Value="True">
                            <Setter TargetName="Text"
                                    Property="Text"
                                    Value="{Binding TextOn, RelativeSource={RelativeSource AncestorType=Button}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                     Value="False">
                            <Setter TargetName="Text"
                                    Property="Text"
                                    Value="{Binding TextOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                     Value="True">
                            <Setter TargetName="Icon"
                                    Property="Text"
                                    Value="{Binding IconOn, RelativeSource={RelativeSource AncestorType=Button}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType=Button}}"
                                     Value="False">
                            <Setter TargetName="Icon"
                                    Property="Text"
                                    Value="{Binding IconOff, RelativeSource={RelativeSource AncestorType=Button}}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BooleanIndicator}">
        <Setter Property="Symbol"
                Value="&#xE7BA;" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="InactiveBrush"
                Value="Black" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BooleanIndicator}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValueStates">
                                <VisualState x:Name="True">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="border"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="border_active"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="False">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="border"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:0.2"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="border_active"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:0.2"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Border Name="border"
                                        Width="{Binding ElementName=border, Path=ActualHeight}"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding InactiveBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2"
                                        Padding="0">
                                    <TextBlock Name="symbol"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Padding="4"
                                               Margin="0"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="{TemplateBinding SymbolSize}"
                                               Foreground="{TemplateBinding InactiveBrush}"
                                               Text="{TemplateBinding Symbol}" />
                                </Border>
                                <Border Name="border_active"
                                        Width="{Binding ElementName=border, Path=ActualHeight}"
                                        Background="{TemplateBinding ActiveBrush}"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2"
                                        Padding="0"
                                        Opacity="0">
                                    <TextBlock Name="symbol_active"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Padding="4"
                                               Margin="0"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="{TemplateBinding SymbolSize}"
                                               Foreground="White"
                                               Text="{TemplateBinding Symbol}" />
                                </Border>
                            </Grid>
                            <Grid Margin="{TemplateBinding Padding}" />
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Padding}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Normal Symbol Button-->
    <Style TargetType="{x:Type local:SymbolButton}"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding"
                Value="7"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SymbolButton}">
                    <Border x:Name="border"
                            CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <Grid x:Name="grid"
                                  Width="{Binding ElementName=grid, Path=ActualHeight}">
                                <TextBlock x:Name="symbol"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="{TemplateBinding SymbolSize}"
                                           Text="{TemplateBinding Symbol}" />
                                <!--<ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />-->
                            </Grid>
                            <TextBlock x:Name="text"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Text="{TemplateBinding Text}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFBEE6FD" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF3C7FB1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFC4E5F6" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF2C628B" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFBCDDEE" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF245A83" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFF4F4F4" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FFADB2B5" />
                            <Setter Property="Foreground"
                                    Value="#FF838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ActiveSymbolButton}"
           BasedOn="{StaticResource {x:Type local:SymbolButton}}">
        <Style.Triggers>
            <Trigger Property="IsActive"
                     Value="True">
                <Setter Property="Text"
                        Value="{Binding ActiveText, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Symbol"
                        Value="{Binding ActiveSymbol, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="IsActive"
                     Value="False">
                <Setter Property="Text"
                        Value="{Binding InactiveText, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Symbol"
                        Value="{Binding InactiveSymbol, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Normal Symbol Button-->
    <Style TargetType="{x:Type local:ToggleSymbolButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Padding"
                Value="7"></Setter>
        <!--<Setter Property="BorderBrush"
                Value="{x:Static SystemColors.ControlDarkBrush}"></Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleSymbolButton}">
                    <Border x:Name="border"
                            CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="checkmark"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:0.1"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="checkmark_checked"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:0.1"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="checkmark_checked"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:0.1"></DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="checkmark"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:0.1"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <Grid x:Name="grid"
                                      Width="{Binding ElementName=grid, Path=ActualHeight}">
                                    <TextBlock x:Name="symbol"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="{TemplateBinding SymbolSize}"
                                               Text="{TemplateBinding Symbol}" />
                                </Grid>
                                <StackPanel Orientation="Vertical"
                                            Margin="{TemplateBinding Padding}">
                                    <TextBlock x:Name="title"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               FontWeight="Bold"
                                               FontSize="{TemplateBinding FontSize}"
                                               Text="{TemplateBinding Title}" />
                                    <TextBlock x:Name="text"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Margin="0,3,0,0"
                                               FontSize="10"
                                               Text="{TemplateBinding Text}" />
                                </StackPanel>
                            </StackPanel>
                            <Border x:Name="checkmark"
                                    Width="14"
                                    Height="14"
                                    Margin="2"
                                    CornerRadius="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1">
                            </Border>
                            <Border x:Name="checkmark_checked"
                                    Width="14"
                                    Height="14"
                                    Margin="2"
                                    CornerRadius="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    BorderBrush="DarkGreen"
                                    Background="DarkGreen"
                                    BorderThickness="0">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="12"
                                           Foreground="White"
                                           Text="&#xE081;" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Button.IsDefaulted"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="Transparent" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFBEE6FD" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF3C7FB1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFC4E5F6" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF2C628B" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFEEFFEE" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="DarkGreen" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFF4F4F4" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FFADB2B5" />
                            <Setter Property="Foreground"
                                    Value="#FF838383" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LabeledContentControl}">
        <Setter Property="VerticalContentAlignment"
                Value="Top"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LabeledContentControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Text="{TemplateBinding Title}"
                                       Width="{TemplateBinding TitleWidth}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       TextAlignment="Left" 
                                       Margin="0,0,7,0"/>
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Focusable="False"
                                              HorizontalAlignment="Stretch"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSymbolLabelStyle"
           TargetType="{x:Type local:SymbolLabel}">
        <!--<Setter Property="OverridesDefaultStyle"
                Value="True" />-->
        <Setter Property="Foreground"
                Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SymbolLabel}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <StackPanel Orientation="{TemplateBinding Orientation}"
                                    VerticalAlignment="Center">
                            <TextBlock x:Name="PART_Symbol"
                                Text="{TemplateBinding Symbol}"
                                       FontSize="{TemplateBinding SymbolSize}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="Center"
                                Padding="{TemplateBinding SymbolPadding}"
                                       FontFamily="{DynamicResource SymbolThemeFontFamily}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SymbolLabel"
           BasedOn="{StaticResource DefaultSymbolLabelStyle}" />

</ResourceDictionary>
